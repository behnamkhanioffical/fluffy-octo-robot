name: Azure - Destroy Preview Env

# **What it does**: Destroys resources associated with a PRs Azure preview environment
# **Why we have it**: Closed PRs don't need apps
# **Who does it impact**: All contributors.

on:
  pull_request:
    types:
      - closed
      - locked
  workflow_dispatch:
    inputs:
      PR_NUMBER:
        description: 'PR Number'
        type: string
        required: true

jobs:
  destory-azure-preview-env:
    name: Destroy
    if: ${{ github.repository == 'github/docs-internal' }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      PR_NUMBER: ${{ github.event.number || github.event.inputs.PR_NUMBER }}
      PREVIEW_ENV_RESOURCE_GROUPS: 4
      NONPROD_REGISTRY_NAME: ghdocs

    steps:
      - name: 'Set env vars'
        id: vars
        run: |
          REPO_NAME=${GITHUB_REPOSITORY#*\/}
          echo "RESOURCE_GROUP=preview-env-${REPO_NAME}-$((${PR_NUMBER} % ${PREVIEW_ENV_RESOURCE_GROUPS}))" >> $GITHUB_ENV
          echo "DEPLOYMENT_NAME=${REPO_NAME}-pr-${PR_NUMBER}" >> $GITHUB_ENV
          echo "APP_NAME=${REPO_NAME}-preview-${PR_NUMBER}" >> $GITHUB_ENV
          echo "IMAGE_REPO=${GITHUB_REPOSITORY}/pr-${PR_NUMBER}" >> $GITHUB_ENV

      - name: 'Az CLI login'
        uses: azure/login@1f63701bf3e6892515f1b7ce2d2bf1708b46beaf
        with:
          creds: ${{ secrets.NONPROD_AZURE_CREDENTIALS }}

      # Succeed despite any non-zero exit code (e.g. if there is no deployment to cancel)
      - name: 'Cancel any in progress deployments'
        run: |
          az deployment group cancel --name ${{ env.DEPLOYMENT_NAME }} -g ${{ env.RESOURCE_GROUP }} || true

      # The full app name is obfuscated by an identifier, so we need to query to find the one for this PR
      - name: 'Get full app name'
        id: full-app-name
        run: |
          FULL_APP_NAME=$(az webapp list -g ${{ env.RESOURCE_GROUP }} --query "[?tags.DocsAppName == '${{ env.APP_NAME }}'].name | [0]")
          echo "::set-output name=result::${FULL_APP_NAME}"

      # Delete web app (which will also delete the App Service plan)
      # This will succeed even if the app doesn't exist / has already been deleted
      - name: 'Delete App Service App (which will also delete the App Service plan)'
        run: |
          az webapp delete -n ${{ steps.full-app-name.outputs.result }} -g ${{ env.RESOURCE_GROUP }}

      # Untag all images under this PR's container registry repo - the container registry will automatically remove untagged images.
      # This will fail if the IMAGE_REPO doesn't exist, but we don't care
      - name: 'Untag all docker images for this PR'
        run: |
          az acr repository delete -n ${{ env.NONPROD_REGISTRY_NAME }} --repository ${{ env.IMAGE_REPO }} -y || true

      # Remove all GitHub deployments from this environment and remove the environment
      - uses: strumwolf/delete-deployment-environment@45c821e46baa405e25410700fe2e9643929706a0
        with:
          token: ${{ secrets.DOCUBOT_REPO_PAT }}
          environment: preview-env-${{ env.PR_NUMBER }}
